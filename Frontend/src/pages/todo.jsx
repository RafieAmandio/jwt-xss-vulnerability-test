import { useState, useEffect } from "react";
import { Button, Col, List, Row, Checkbox,  Form } from 'antd';

export function TodoPage() {
  const [todoArray, setTodoArray] = useState([]);
  const [todoRecent, setTodoRecent] = useState([]);
  const [todoItem, setTodoItem] = useState("");
  const [form] = Form.useForm();

  useEffect(() => {
    // Fetch recent todos on component mount
    fetchRecentTodos();
  }, []);

  const checkTodo = (index) => {
    var tempArray = todoArray.slice();
    tempArray[index] = {
      value: tempArray[index].value,
      checked: !tempArray[index].checked
    }

    setTodoArray(tempArray);
  }

  const addTodo = async () => {
    if (todoItem) {
      const token = localStorage.getItem("token"); // Assuming you store the token in localStorage

      try {
        // Add todo to the server
        await fetch("http://localhost:3000/add-todo", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`
          },
          body: JSON.stringify({ todo: todoItem })
        });

        // Refetch recent todos
        fetchRecentTodos();
        const todoObject = {
            value: todoItem,
            checked: false
        };
    
            setTodoArray([...todoArray, todoObject]);
      } catch (error) {
        console.error("Error adding todo:", error);
      }
    }

    form.resetFields();
  }

  const deleteTodo = (index) => {
    var tempArray = todoArray.slice();
    tempArray.splice(index, 1);

    setTodoArray(tempArray);
  }

  const clearTodo = () => {
    setTodoArray([]);
  }

  const fetchRecentTodos = async () => {
    try {
      const response = await fetch("http://localhost:3000/get-latest-todos");
      const data = await response.json();
      setTodoRecent(data);
    } catch (error) {
      console.error("Error fetching recent todos:", error);
    }
}
    return(
        <>
        <Row>
            <Col >
                <Col className="todo-container" flex={3}>
                    <h1 className="font-bold">To-do List Dangerous Inner HTML</h1>
                    <Row className="button-row" gutter={16}>
                        <Col>
                            <input className= "bg-white border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5  " placeholder="Input To-Do" onChange={ (e) => setTodoItem(e.target.value) } />
                        </Col>
                        <Col>
                            <Button type="button" className="text-white bg-blue-700 hover:bg-blue-800 focus:outline-none focus:ring-4 focus:ring-blue-300 font-medium rounded-full text-sm px-5 py-2.5 text-center flex items-center justify-center me-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800" onClick={addTodo}>
                                Add Items
                            </Button>
                        </Col>
                        <Col>
                            <Button className="text-white bg-red-700 hover:bg-red-800 focus:outline-none focus:ring-4 focus:ring-red-300 font-medium rounded-full text-sm px-5 py-2.5 text-center flex items-center justify-center me-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900" onClick={clearTodo}>
                                Clear All
                            </Button>
                        </Col>
                    </Row>
                    <Row className="list-container">
                        <List
                            className="list"
                            bordered
                            itemLayout="horizontal"
                            dataSource={todoArray}
                            renderItem={(item, index) => (
                                <List.Item>
                                    <Row className="list-row">
                                        <Col span={20} className="list-itemname">
                                            <Checkbox onChange={() => checkTodo(index)} checked={item.checked} className={item.checked? "checked-item": ""}>
                                                <div dangerouslySetInnerHTML={{"__html": item.value }}></div>
                                            </Checkbox>
                                        </Col>
                                        <Col span={4}>
                                            <a className="delete-item" href onClick={() => deleteTodo(index)}>Delete</a>
                                        </Col>
                                    </Row>
                                </List.Item>
                            )}
                        />
                    </Row>
                </Col>
            </Col>
             <Col >
          <Col className="todo-container" flex={1}>
            <h1 className="font-bold">Recent To-Do </h1>
            <Row className="list-container">
              <List
                className="list"
                bordered
                itemLayout="horizontal"
                dataSource={todoRecent}
                renderItem={(item) => (
                  <List.Item>
                    <Row className="list-row">
                      <Col span={20} className="list-itemname">
    
                          <div dangerouslySetInnerHTML={{ "__html": item.value }}></div>
        
                      </Col>
                      <Col span={4}>
                        <div dangerouslySetInnerHTML={{ "__html": item.username }}></div>
                      </Col>
                    </Row>
                  </List.Item>
                )}
              />
            </Row>
          </Col>
        </Col>
            </Row>
        </>
    )
}